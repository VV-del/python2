#给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素

#方法1
from typing import List

class Solution:
	# def singleNumber(self, nums: List[int]) -> int:
	def singleNumber(self,nums):

		# :type nums: List[int]
		# :rtype: int

		res = 0
		d = dict()
		for num in nums:
			if num not in d:
				d[num] = 1
			else:
				d[num] += 1
		res = next(k for k, val in d.items() if val == 1)
		return res


sol = Solution()
print(sol.singleNumber([2,3,4,3,2,3,4,5,5,1]))


#方法2

class Solution2:

	def singleNumber2(self, nums: List[int]) -> int:
		r = 0
		for i in nums:
			r ^= i
		return i

sox = Solution2()
print(sox.singleNumber2([2,3,4,3,2,3,4,5,5,1]))
